name: Release

on:
  push:
    branches:
      - main

env:
  CARGO_TERM_COLOR: always

jobs:
  publish-cli:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable

    - name: Check if version already published
      id: check_version
      run: |
        CRATE_NAME=$(grep -m 1 name prompts-cli/Cargo.toml | sed -E 's/name = "([^"]+)"/\1/')
        CRATE_VERSION=$(grep -m 1 version prompts-cli/Cargo.toml | sed -E 's/version = "([^"]+)"/\1/')
        if cargo search --limit 1 $CRATE_NAME | grep "^${CRATE_NAME} = \"${CRATE_VERSION}\""; then
          echo "Crate version ${CRATE_VERSION} already published. Skipping publish."
          echo "skip_publish=true" >> $GITHUB_OUTPUT
        else
          echo "skip_publish=false" >> $GITHUB_OUTPUT
        fi

    - name: Publish to crates.io
      if: steps.check_version.outputs.skip_publish == 'false'
      run: cargo publish --token ${{ secrets.CARGO_REGISTRY_TOKEN }} -p prompts-cli

  publish-tui:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable

    - name: Install dependencies
      run: sudo apt-get update && sudo apt-get install -y pkg-config libgtk-3-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf libsoup2.4-dev

    - name: Check if version already published
      id: check_version
      run: |
        CRATE_NAME=$(grep -m 1 name prompts-tui/Cargo.toml | sed -E 's/name = "([^"]+)"/\1/')
        CRATE_VERSION=$(grep -m 1 version prompts-tui/Cargo.toml | sed -E 's/version = "([^"]+)"/\1/')
        if cargo search --limit 1 $CRATE_NAME | grep "^${CRATE_NAME} = \"${CRATE_VERSION}\""; then
          echo "Crate version ${CRATE_VERSION} already published. Skipping publish."
          echo "skip_publish=true" >> $GITHUB_OUTPUT
        else
          echo "skip_publish=false" >> $GITHUB_OUTPUT
        fi

    - name: Publish to crates.io
      if: steps.check_version.outputs.skip_publish == 'false'
      run: cargo publish --token ${{ secrets.CARGO_REGISTRY_TOKEN }} -p prompts-tui

  publish-tauri:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable

    - name: Install dependencies
      run: sudo apt-get update && sudo apt-get install -y pkg-config libgtk-3-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf libsoup2.4-dev

    - name: Check if version already published
      id: check_version
      run: |
        CRATE_NAME=$(grep -m 1 name prompts-tauri/Cargo.toml | sed -E 's/name = "([^"]+)"/\1/')
        CRATE_VERSION=$(grep -m 1 version prompts-tauri/Cargo.toml | sed -E 's/version = "([^"]+)"/\1/')
        if cargo search --limit 1 $CRATE_NAME | grep "^${CRATE_NAME} = \"${CRATE_VERSION}\""; then
          echo "Crate version ${CRATE_VERSION} already published. Skipping publish."
          echo "skip_publish=true" >> $GITHUB_OUTPUT
        else
          echo "skip_publish=false" >> $GITHUB_OUTPUT
        fi

    - name: Publish to crates.io
      if: steps.check_version.outputs.skip_publish == 'false'
      run: cargo publish --token ${{ secrets.CARGO_REGISTRY_TOKEN }} -p prompts-tauri
